########### Order Manager SQL Queries

order.orderlist=SELECT * FROM EM_USER_MASTER

## Order Master Page
order.portalOrder=select zam.order_id,zam.status_code,zam.retry,zam.sys_creation_date,zam.sys_update_date,zam.originator_id,zeo.order_type,zcb.ban_number,zcb.ctn_number, en.first_name,en.last_name,en.email,en.phone_number,en.address1,en.address2,en.city,en.state,en.zip_code from zig_auto_master zam ,zig_extra_order zeo ,zig_customer_backend_info zcb ,zig_enrollment en where zam.order_id=zeo.order_id AND zeo.order_id=zcb.order_id AND zeo.order_id=en.order_id AND ZAM.ORDER_ID=?
order.ensembleOrder=SELECT A.EXT_ORDER_OID,A.ENS_ORDER_OID,B.BAN,B.SYS_CREATION_DATE, B.SYS_UPDATE_DATE, B.APPLICATION_ID, B.ORDER_STATUS FROM ENS_EXT_ORDER_MAP A,POS_ORDER B WHERE A.ENS_ORDER_OID = B.ORDER_OID  AND A.EXT_ORDER_OID = ?
order.apiOrder=SELECT ORDER_ID,ERROR_MESSAGE,SOURCE,API_NAME,TO_CHAR(SYS_CREATION_DATE,'DD-MON-YYYY HH:MI:SS AM') AS SYS_CREATION_DATE,ORIGINATOR_ID,SEQ_NUM,(CASE WHEN ERROR_CODE IN ('100','200') THEN 'N' ELSE 'Y' END ) AS HASERROR FROM ZIG_SER_ORDER_ERROR  where order_id=? order by sys_creation_date desc
order.getAPIRequest=SELECT REQUEST FROM ZIG_SER_ORDER_ERROR WHERE SEQ_NUM =?
order.getAPIResponse=SELECT RESPONSE FROM ZIG_SER_ORDER_ERROR WHERE SEQ_NUM =?
order.getEnrollmentDetails=select en.first_name,en.last_name,en.email,en.phone_number,en.address1,en.address2,en.city,en.state,en.zip_code  from zig_enrollment en  where en.ORDER_ID=?
order.getPortalShipmentDetails=SELECT ORDER_ID,EPC_SKU_ID,PRODUCT_TYPE,ESN_NO,IMEI AS IMEI,SIM,SHIPMENT_DATE,LINE_ITEM_NO, B.DISPLAY_NAME FROM ZIG_ORDER_SHIPMENT_INFO A, DCS_INVENTORY B WHERE A.EPC_SKU_ID = B.CATALOG_REF_ID AND A.ORDER_ID = ?
order.getOrderBANandCTN=select zcb.ban_number,zcb.ctn_number from zig_customer_backend_info zcb where zcb.ORDER_ID=?
order.getOrderType=select zeo.order_type from zig_extra_order zeo where zeo.ORDER_ID=?
order.getPortalOrderDetails=select zam.order_id,zam.status_code,zam.retry,zam.sys_creation_date,zam.sys_update_date,zam.originator_id from zig_auto_master zam where ZAM.ORDER_ID=?
order.getPortalLineItemInfo=SELECT ORDER_ID,LINE_ID,IMEI,SUBSCRIBER_ID,EXISTING_USER_LINE_TYPE,ZIP_CODE,UPDATE_SUB_CALLED,PURCHASE_DEVICE_CALLED,WIRELESS_NUMBER,( CASE  WHEN LI.LINE_TYPE = '100' THEN 'PORTIN' ELSE 'REGULAR' END ) AS LINE_TYPE, ( CASE WHEN li.existing_user_line_type = '300' THEN 'SIM_SWAP'	WHEN li.existing_user_line_type = '200' THEN 'UPGRADE'	WHEN li.existing_user_line_type = '100' THEN 'ADDLINE' ELSE 'NEW_CUST' END ) AS SUB_FLOW_TYPE FROM ZIG_LINEITEM_INFO li WHERE ORDER_ID = ?
order.getEnsLineItemInfo=SELECT POS.ORDER_OID,POS.APPLICATION_ID,POS.SUBLINE_STATUS,POS.PTN,POS.SUBSCRIBER_NO,POS.ICC_ID,POS.IMEI_SIM,SR.BAN,SR.PTN_STATUS FROM POS_ORDER_SUBLINE POS,SUBSCRIBER_RSOURCE SR WHERE POS.SUBSCRIBER_NO = SR.SUBSCRIBER_NO AND POS.ORDER_OID = (SELECT ENS_ORDER_OID FROM ENS_EXT_ORDER_MAP WHERE EXT_ORDER_OID = ?)
order.getPortalPortinDetails=SELECT ORDER_ID,NUMBER_TO_TRANSFER,LINE_ID,PORTIN_STATUS,SPNAME FROM ZIG_PORTIN_INFO WHERE ORDER_ID = ?
order.getEnsPortinDetails=SELECT B.REQUEST_NO,B.BAN,B.PORT_PATH,B.REQUEST_STS,B.EXTERNAL_REQ_NO,C.STATUS_DESC,(SELECT PTN_NO FROM SUB_PORT_REQUEST WHERE REQUEST_NO = A.REQUEST_NO AND ROWNUM=1)AS PTN_NO FROM ORDER_PORT_REQUEST A, PORT_REQUEST B, PORT_STATUS C, ENS_EXT_ORDER_MAP D WHERE A.REQUEST_NO = B.REQUEST_NO AND C.STATUS_CODE = B.REQUEST_STS AND C.PORT_TYPE = B.PORT_PATH AND A.ORDER_OID = D.ENS_ORDER_OID AND D.EXT_ORDER_OID = ?
order.getOrderLineSIMandIMEIDetails=SELECT B.ORDER_ID, B.LINE_ID, B.SUBSCRIBER_ID, B.WIRELESS_NUMBER,C.SIM, C.IMEI FROM ZIG_LINEITEM_INFO B, zig_order_shipment_info C WHERE B.ORDER_ID = C.ORDER_ID AND B.LINE_ID = C.LINE_ITEM_NO AND B.ORDER_ID = ? AND C.PRODUCT_TYPE IN ('device','sim')
order.getCurrentStatus=SELECT STATUS_CODE FROM ZIG_AUTO_MASTER WHERE ORDER_ID = ?
order.getCurrentSIMValue=SELECT SIM FROM ZIG_ORDER_SHIPMENT_INFO where product_type in ('device','sim') and order_id=? and LINE_ITEM_NO =?
order.getCurrentIMEIValue=SELECT IMEI FROM ZIG_ORDER_SHIPMENT_INFO where product_type='device' and order_id=? and LINE_ITEM_NO =?
order.getCurrentRetryCount=SELECT RETRY FROM ZIG_AUTO_MASTER WHERE ORDER_ID = ?

#Inventory Details and ESN linked Name changes 
order.getInventoryStatus=SELECT DISPLAY_NAME,AVAIL_STATUS,STOCK_LEVEL,STOCK_THRESH FROM DCS_INVENTORY WHERE CATALOG_REF_ID=?
order.getESNReuseData=select CUSTOMER_ID from physical_device where UNIT_ESN=?
order.getUpholdLevel=select UPHOLD_LEVEL from ZIG_UPHOLD_LEVEL where SKU_ID=?
order.getBAN=select name_id from address_name_link where CUSTOMER_ID=?;
order.getName=select FIRST_NAME,LAST_BUSINESS_NAME from NAME_DATA where name_id=?


## Dashboard Page
order.stuckOrdersCount=select status_code ,count(status_code) as count from zig_auto_master where sys_creation_date>sysdate-100 and status_code in ('OSHF','ORFI','ACTF','ORLF','OURF','PDRF','PTRF') group by status_code
order.stuckOrdersbyStatus=select order_id from zig_auto_master where sys_creation_date>sysdate-100 and status_code=?
order.handled=SELECT SYS_CREATION_DATE, COUNT(ORDER_ID) FROM (SELECT TO_CHAR(SYS_CREATION_DATE,'DD MON') AS SYS_CREATION_DATE, ORDER_ID FROM PSO_ORDER_TRACKER WHERE SYS_CREATION_DATE>SYSDATE-10 ) GROUP BY SYS_CREATION_DATE order by SYS_CREATION_DATE
order.stuckOrdersStatusbyCount=select status_code,count(status_code) as count from zig_auto_master where sys_creation_date>sysdate-100 and status_code in ('OSHF','ORFI','ACTF','ORLF','OURF','PDRF','PRTF') group by status_code
order.stuckOrderBacklogInLast10Days=SELECT CREATION_DATE,STATUS_CODE,ORDER_COUNT FROM (SELECT TO_CHAR(SYS_CREATION_DATE,'DD Mon YYYY')AS CREATION_DATE,STATUS_CODE,COUNT(ORDER_ID) AS ORDER_COUNT FROM (  SELECT ORDER_ID,STATUS_CODE,SYS_CREATION_DATE   FROM ZIG_AUTO_MASTER   WHERE SYS_CREATION_DATE > SYSDATE-10  )GROUP BY TO_CHAR(SYS_CREATION_DATE,'DD Mon YYYY'),STATUS_CODE )ORDER BY TO_DATE(CREATION_DATE,'DD-MM-YYYY') DESC
order.registeredOrderCount=SELECT COUNT(distinct(A.ORDER_ID)) AS COUNT FROM ZIG_AUTO_MASTER A, ZIG_LINEITEM_INFO B WHERE A.ORDER_ID = B.ORDER_ID AND TO_CHAR(A.SYS_CREATION_DATE,'DD-MM-YYYY') = TO_CHAR(SYSDATE,'DD-MM-YYYY') AND B.existing_user_line_type = ?
order.regOrderCount=SELECT count(distinct(A.ORDER_ID)) AS COUNT FROM ZIG_AUTO_MASTER A, ZIG_LINEITEM_INFO B WHERE A.ORDER_ID = B.ORDER_ID AND TO_CHAR(A.SYS_CREATION_DATE,'DD-MM-YYYY') = TO_CHAR(SYSDATE,'DD-MM-YYYY') AND B.LINE_TYPE = ?
order.regPrepurchaseOrderCount=SELECT COUNT(distinct(A.ORDER_ID)) AS COUNT FROM ZIG_AUTO_MASTER A, ZIG_LINEITEM_INFO B WHERE A.ORDER_ID = B.ORDER_ID AND TO_CHAR(A.SYS_CREATION_DATE,'DD-MM-YYYY') = TO_CHAR(SYSDATE,'DD-MM-YYYY') AND B.national_retailer IS NOT NULL
order.regByodOrderCount=SELECT COUNT(distinct(A.ORDER_ID)) AS COUNT FROM ZIG_AUTO_MASTER A, ZIG_LINEITEM_INFO B WHERE A.ORDER_ID = B.ORDER_ID AND TO_CHAR(A.SYS_CREATION_DATE,'DD-MM-YYYY') = TO_CHAR(SYSDATE,'DD-MM-YYYY') AND B.imei IS NOT NULL
order.regSaveDeskOrderCount=SELECT COUNT(A.ORDER_ID) AS COUNT FROM ZIG_AUTO_MASTER A, ZIG_EXTRA_ORDER B WHERE A.ORDER_ID = B.ORDER_ID AND TO_CHAR(A.SYS_CREATION_DATE,'DD-MM-YYYY') = TO_CHAR(SYSDATE,'DD-MM-YYYY') AND B.order_type = 400
order.getACTIorCNCLOrderCount=SELECT COUNT(STATUS_CODE) AS COUNT FROM ZIG_AUTO_MASTER WHERE TO_CHAR(SYS_CREATION_DATE,'DD-MM-YYYY') = TO_CHAR(SYSDATE,'DD-MM-YYYY')AND STATUS_CODE = ?

##Segregation Of Orders
order.stuckOrdersbySingleLine=SELECT ORDER_ID,IMEI,SIM,SCAC_CODE,ORDER_TRACK_NO FROM zig_order_shipment_info where order_id in (select Order_id  from zig_lineitem_info where order_id in (select Order_id from zig_auto_master where status_code='OSHF') group by Order_id having count(Order_id)=1)
order.stuckOrdersbyMultiLine=SELECT ORDER_ID,SIM,IMEI,ESN_NO,SCAC_CODE,LINE_ITEM_NO,ORDER_TRACK_NO from zig_order_shipment_info where order_id in (select Order_id  from zig_lineitem_info where order_id in (select Order_id from zig_auto_master where status_code='OSHF') group by Order_id having count(Order_id)>1)

##dynamic graph
order.dynRegOrderCount=SELECT COUNT(A.ORDER_ID) AS COUNT,TO_CHAR(A.sys_creation_date,'yyyy-mm-dd') AS SYS_CREATION_DATE  FROM ZIG_AUTO_MASTER A, ZIG_LINEITEM_INFO B WHERE A.ORDER_ID = B.ORDER_ID AND TO_DATE(TO_CHAR(sys_creation_date,'yyyy-mm-dd'),'yyyy-mm-dd')  BETWEEN  TO_DATE(?,'yyyy-mm-dd') and TO_DATE(?,'yyyy-mm-dd')AND B.existing_user_line_type = ? group by TO_CHAR(A.sys_creation_date,'yyyy-mm-dd')order by TO_CHAR(A.sys_creation_date,'yyyy-mm-dd')      
order.dynOrderCount=SELECT COUNT(A.ORDER_ID) AS COUNT ,TO_CHAR(A.sys_creation_date,'yyyy-mm-dd') AS SYS_CREATION_DATE FROM ZIG_AUTO_MASTER A, ZIG_LINEITEM_INFO B WHERE A.ORDER_ID = B.ORDER_ID AND TO_DATE(TO_CHAR(sys_creation_date,'yyyy-mm-dd'),'yyyy-mm-dd')  BETWEEN  TO_DATE(?,'yyyy-mm-dd') and TO_DATE(?,'yyyy-mm-dd') AND B.LINE_TYPE = ? group by TO_CHAR(A.sys_creation_date,'yyyy-mm-dd')order by TO_CHAR(A.sys_creation_date,'yyyy-mm-dd')                    
order.dynPrepurchaseOrderCount=SELECT COUNT(A.ORDER_ID) AS COUNT ,TO_CHAR(A.sys_creation_date,'yyyy-mm-dd') AS SYS_CREATION_DATE FROM ZIG_AUTO_MASTER A, ZIG_LINEITEM_INFO B WHERE A.ORDER_ID = B.ORDER_ID AND TO_DATE(TO_CHAR(sys_creation_date,'yyyy-mm-dd'),'yyyy-mm-dd')  BETWEEN  TO_DATE(?,'yyyy-mm-dd') and TO_DATE(?,'yyyy-mm-dd') AND B.national_retailer IS NOT NULL group by TO_CHAR(A.sys_creation_date,'yyyy-mm-dd')order by TO_CHAR(A.sys_creation_date,'yyyy-mm-dd') 
order.dynByodOrderCount=SELECT COUNT(A.ORDER_ID) AS COUNT ,TO_CHAR(A.sys_creation_date,'yyyy-mm-dd') AS SYS_CREATION_DATE FROM ZIG_AUTO_MASTER A, ZIG_LINEITEM_INFO B WHERE A.ORDER_ID = B.ORDER_ID AND TO_DATE(TO_CHAR(sys_creation_date,'yyyy-mm-dd'),'yyyy-mm-dd')  BETWEEN  TO_DATE(?,'yyyy-mm-dd') and TO_DATE(?,'yyyy-mm-dd') AND B.imei IS NOT NULL   group by TO_CHAR(A.sys_creation_date,'yyyy-mm-dd')order by TO_CHAR(A.sys_creation_date,'yyyy-mm-dd')                 
order.dynSaveDeskOrderCount=SELECT COUNT(A.ORDER_ID) AS COUNT ,TO_CHAR(A.sys_creation_date,'yyyy-mm-dd') AS SYS_CREATION_DATE FROM ZIG_AUTO_MASTER A, ZIG_EXTRA_ORDER B WHERE A.ORDER_ID = B.ORDER_ID AND TO_DATE(TO_CHAR(sys_creation_date,'yyyy-mm-dd'),'yyyy-mm-dd')  BETWEEN  TO_DATE(?,'yyyy-mm-dd') and TO_DATE(?,'yyyy-mm-dd') AND B.order_type = 400 group by TO_CHAR(A.sys_creation_date,'yyyy-mm-dd')order by TO_CHAR(A.sys_creation_date,'yyyy-mm-dd')                  
order.dynACTIorCNCLOrderCount=SELECT COUNT(STATUS_CODE) AS COUNT ,TO_CHAR(sys_creation_date,'yyyy-mm-dd') AS CREATION_DATE FROM ZIG_AUTO_MASTER WHERE TO_DATE(TO_CHAR(sys_creation_date,'yyyy-mm-dd'),'yyyy-mm-dd')  BETWEEN  TO_DATE(?,'yyyy-mm-dd') and TO_DATE(?,'yyyy-mm-dd')AND STATUS_CODE = ? group by TO_CHAR(sys_creation_date,'yyyy-mm-dd') order by TO_CHAR(sys_creation_date,'yyyy-mm-dd')                                                                      

#remediationSteps
order.deleteRemediationStep=delete from REMEDIATION_STEP WHERE ORDER_STATUS=?
order.insertRemediationStep=INSERT INTO REMEDIATION_STEP(SID,ORDER_STATUS,REMEDIATION_STEP,SYS_CREATION_DATE) VALUES(REMEDIATION_STEP_SEQ.nextval,?,?,SYSDATE)


## Update Order Page
order.updateOrderStatusQuerry=update ZIG_AUTO_MASTER set status_code=? where order_id=?
order.updateOrderIMEIQuerry=update ZIG_ORDER_SHIPMENT_INFO set IMEI=? where product_type='device' and order_id=? and LINE_ITEM_NO = ?
order.updateOrderSIMQuerry=update ZIG_ORDER_SHIPMENT_INFO set SIM=? where product_type in ('device','sim') and order_id=? and LINE_ITEM_NO = ?
order.updateOrderRetryCountQuerry=update ZIG_AUTO_MASTER set retry=? where order_id=?
order.updateOrderTrackerQuerry=insert into PSO_ORDER_TRACKER(TID,ORDER_ID,LINE_ID,UPDATE_TYPE,PREVIOUS_VALUE,NEW_VALUE,SYS_CREATION_DATE,LOG_REF_ID,UPDATE_BY,UPDATED_TABLE,SYS_UPDATE_DATE) values (PSO_ORDER_TRACKER_SEQ.nextval,?,?,?,?,?,sysdate,?,?,?,sysdate)
order.createTempTableForBulkUpdate=CREATE TABLE <TABLE_NAME>(ORDER_ID VARCHAR2(40 CHAR),LINE_ID NUMBER(19),STATUS VARCHAR2(10),SIM VARCHAR2(50), IMEI VARCHAR2(50), RETRY NUMBER(1),CREATED_BY VARCHAR2(50),SYS_CREATION_DATE TIMESTAMP(6))
order.insertBulkOrderInTempTable=INSERT INTO PSO_BULK_UPDATE_DATA(BID,BU_SES_ID,ORDER_ID ,LINE_ID ,SIM , IMEI, STATUS_CODE ,RETRY ,UPDATE_BY,SYS_UPDATE_DATE) VALUES(PSO_BULK_UPDATE_DATA_SEQ.nextval,?,?,?,?,?,?,?,?,SYSDATE)
order.readTempTableforBulkOrder=SELECT BID,BU_SES_ID,BU_SES_ID,ORDER_ID ,LINE_ID ,SIM , IMEI, STATUS_CODE ,RETRY ,UPDATE_BY,SYS_UPDATE_DATE FROM PSO_BULK_UPDATE_DATA WHERE BU_SES_ID = ?
order.getOrderStatusList=SELECT status_code FROM zig_auto_ref_data order by status_code


#Admin
order.getRoleList=SELECT ROLE_ID,NAME,ROLE_DESC FROM PSO_ROLE_MASTER
order.addGroup=INSERT INTO PSO_GROUP_MASTER(GROUP_ID,NAME,GROUP_DESC,ROLE_ID,CREATED_BY,SYS_CREATION_DATE) VALUES(PSO_GROUP_SEQ.nextval,?,?,?,?,SYSDATE)
order.updateGroup=UPDATE PSO_GROUP_MASTER SET NAME=?, GROUP_DESC=?, ROLE_ID=?, UPDATE_BY=?, SYS_UPDATE_DATE=SYSDATE WHERE GROUP_ID=?
order.getGroupList=SELECT A.GROUP_ID as GROUP_ID,A.NAME as GROUP_NAME,A.GROUP_DESC as GROUP_DESC,A.ROLE_ID as ROLE_ID,B.NAME as ROLE_NAME FROM PSO_GROUP_MASTER A, PSO_ROLE_MASTER B WHERE A.ROLE_ID=B.ROLE_ID
order.deleteGroup=DELETE FROM PSO_GROUP_MASTER WHERE GROUP_ID = ?


#USER
user.getUserByUsernameForAuthentication=SELECT EMP_ID,PASSWORD FROM PSO_USER_MASTER WHERE USERNAME = ?
user.addNewUserSignUpRequest=INSERT INTO pso_user_signup_request(EMP_ID,USERNAME,FIRSTNAME,LASTNAME,EMAIL,COMPANY,SYS_CREATION_DATE,STATUS) VALUES(?,?,?,?,?,?,SYSDATE,?)
user.pendingUserList=SELECT EMP_ID,USERNAME,FIRSTNAME,LASTNAME,EMAIL,COMPANY,STATUS FROM PSO_USER_SIGNUP_REQUEST ORDER BY SYS_CREATION_DATE DESC
user.rejectUserRequest=UPDATE PSO_USER_SIGNUP_REQUEST SET STATUS='R', COMMENTS = ? WHERE EMP_ID = ?
user.deletePendingUserReqQuery=DELETE FROM pso_user_signup_request WHERE EMP_ID = ?
user.getPendingUserDataByEmpId=SELECT EMP_ID,USERNAME,FIRSTNAME,LASTNAME,EMAIL,COMPANY,STATUS FROM PSO_USER_SIGNUP_REQUEST WHERE EMP_ID = ?
user.getUserDataByEmpId=SELECT A.USER_ID,A.EMP_ID,A.USERNAME,A.FIRSTNAME,A.LASTNAME,A.EMAIL,A.COMPANY,A.GROUP_ID,B.NAME AS GROUP_NAME,C.NAME AS ROLE_NAME FROM PSO_USER_MASTER A, PSO_GROUP_MASTER B, PSO_ROLE_MASTER C WHERE A.GROUP_ID = B.GROUP_ID AND B.ROLE_ID = C.ROLE_ID AND A.EMP_ID = ?
user.doUserAssigment=INSERT INTO PSO_USER_MASTER(USER_ID,EMP_ID,USERNAME,PASSWORD,FIRSTNAME,LASTNAME,EMAIL,COMPANY,GROUP_ID,CREATED_BY,SYS_CREATION_DATE,USER_STATUS) VALUES(PSO_USER_SEQ.nextval,?,?,?,?,?,?,?,?,?,SYSDATE,?)
user.updateUserAssignment=UPDATE PSO_USER_MASTER SET FIRSTNAME=?,LASTNAME=?,EMAIL=?,COMPANY=?,GROUP_ID=?,UPDATE_BY=?,SYS_UPDATE_DATE=SYSDATE WHERE EMP_ID = ?
user.getUserList=SELECT A.USER_ID,A.EMP_ID,A.USERNAME,A.FIRSTNAME,A.LASTNAME,A.EMAIL,A.COMPANY,A.GROUP_ID,B.NAME AS GROUP_NAME,C.NAME AS ROLE_NAME FROM PSO_USER_MASTER A, PSO_GROUP_MASTER B, PSO_ROLE_MASTER C WHERE A.GROUP_ID = B.GROUP_ID AND B.ROLE_ID = C.ROLE_ID
user.setupUserPassword=UPDATE PSO_USER_MASTER SET PASSWORD = ?,USER_STATUS = ? WHERE EMP_ID = ? AND EMAIL = ? AND PASSWORD = ?
user.checkUsername=SELECT COUNT(USERNAME) as count FROM PSO_USER_MASTER WHERE UPPER(USERNAME) = UPPER(?)
user.changePassword=UPDATE PSO_USER_MASTER SET PASSWORD = ? WHERE EMP_ID = ? AND PASSWORD = ?
user.getCurrentPassword=SELECT PASSWORD FROM PSO_USER_MASTER WHERE EMP_ID = ?
